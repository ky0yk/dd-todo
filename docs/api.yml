openapi: '3.0.0'
info:
  version: 1.0.0
  title: タスクリストAPI

paths:
  /tasks:
    get:
      summary: タスク一覧取得
      description: タスク一覧のサマリーを取得します。ソートは作成日時の昇順です。
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskSummary'
        # TODO: クエリパラメータが増えたら400系のエラーを追加する
        '500':
          $ref: '#/components/responses/Common500'
        '503':
          $ref: '#/components/responses/Common503'
    post:
      summary: タスク作成
      description: 新しいタスクを作成します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                type: 'object'
                properties:
                  code:
                    type: 'string'
                    enum: [INVALID_PAYLOAD]
                  message:
                    type: 'string'
              examples:
                INVALID_PAYLOAD:
                  $ref: '#/components/examples/INVALID_PAYLOAD'
        '500':
          $ref: '#/components/responses/Common500'
        '503':
          $ref: '#/components/responses/Common503'

  /tasks/{id}:
    get:
      summary: タスク取得
      description: IDで指定されたタスクを取得します。
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                type: 'object'
                properties:
                  code:
                    type: 'string'
                    enum: [INVALID_PATH_PARAMETER]
                  message:
                    type: 'string'
              examples:
                INVALID_PATH_PARAMETER:
                  $ref: '#/components/examples/INVALID_PATH_PARAMETER'
        '404':
          $ref: '#/components/responses/Common404'
        '500':
          $ref: '#/components/responses/Common500'
        '503':
          $ref: '#/components/responses/Common503'

    put:
      summary: タスク更新
      description: タスクの詳細情報を更新します。リクエストボディには、少なくとも1つのプロパティが含まれている必要があります。
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/400PathPayload'
        '404':
          $ref: '#/components/responses/Common404'
        '500':
          $ref: '#/components/responses/Common500'
        '503':
          $ref: '#/components/responses/Common503'

    delete:
      summary: タスク削除
      description: タスクを削除します。
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400PathPayload'
        '404':
          $ref: '#/components/responses/Common404'
        '500':
          $ref: '#/components/responses/Common500'
        '503':
          $ref: '#/components/responses/Common503'

  /tasks/{id}/complete:
    patch:
      summary: タスク完了状態変更
      description: タスクの完了状態を変更します。
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTaskRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/400PathPayload'
        '404':
          $ref: '#/components/responses/Common404'
        '500':
          $ref: '#/components/responses/Common500'
        '503':
          $ref: '#/components/responses/Common503'

components:
  schemas:
    TaskTitle:
      type: string
      description: タスクのタイトル
      minLength: 1
      maxLength: 100
      example: 'コーヒーを淹れる'
    TaskDescription:
      type: string
      description: タスクの説明
      maxLength: 1000
      example: '濃いめで'
    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: タスクの一意の識別子(UUID)
          example: 'f0f8f5a0-309d-11ec-8d3d-0242ac130003'
        title:
          $ref: '#/components/schemas/TaskTitle'
        completed:
          type: boolean
          description: タスクが完了したかどうか
          example: false
        description:
          $ref: '#/components/schemas/TaskDescription'
        createdAt:
          type: string
          format: date-time
          description: タスクの作成日時（ISO 8601形式）
          example: '2021-06-22T14:24:02.071Z'
        updatedAt:
          type: string
          format: date-time
          description: タスクの最終更新日時（ISO 8601形式）
          example: '2021-06-22T14:24:02.071Z'
    TaskSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: タスクの一意の識別子(UUID)
          example: 'f0f8f5a0-309d-11ec-8d3d-0242ac130003'
        title:
          $ref: '#/components/schemas/TaskTitle'
        completed:
          type: boolean
          description: タスクが完了したかどうか
          example: false
        createdAt:
          type: string
          format: date-time
          description: タスクの作成日時（ISO 8601形式）
          example: '2021-06-22T14:24:02.071Z'
        updatedAt:
          type: string
          format: date-time
          description: タスクの最終更新日時（ISO 8601形式）
          example: '2021-06-22T14:24:02.071Z'
    CreateTaskRequest:
      type: object
      required:
        - title
      properties:
        title:
          $ref: '#/components/schemas/TaskTitle'
        description:
          $ref: '#/components/schemas/TaskDescription'
    UpdateTaskRequest:
      type: object
      # NOTE: どちらかが含まれていればいいので必須にはしない
      properties:
        title:
          $ref: '#/components/schemas/TaskTitle'
        description:
          $ref: '#/components/schemas/TaskDescription'
    CompleteTaskRequest:
      type: object
      required:
        - completed
      properties:
        completed:
          type: boolean
          description: タスクが完了したかどうか
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string

  responses:
    Common404:
      description: 'Not Found'
      content:
        application/json:
          schema:
            type: 'object'
            properties:
              code:
                type: 'string'
                enum: [TASK_NOT_FOUND]
              message:
                type: 'string'
          examples:
            TASK_NOT_FOUND:
              $ref: '#/components/examples/TASK_NOT_FOUND'
    Common500:
      description: 'Internal Server Error'
      content:
        application/json:
          schema:
            type: 'object'
            properties:
              code:
                type: 'string'
                enum:
                  [
                    MALFORMED_DATA,
                    DATABASE_CONNECTION_ERROR,
                    TIMEOUT,
                    UNKNOWN_ERROR,
                  ]
              message:
                type: 'string'
          examples:
            MALFORMED_DATA:
              $ref: '#/components/examples/MALFORMED_DATA'
            DATABASE_CONNECTION_ERROR:
              $ref: '#/components/examples/DATABASE_CONNECTION_ERROR'
            TIMEOUT:
              $ref: '#/components/examples/TIMEOUT'
            UNKNOWN_ERROR:
              $ref: '#/components/examples/UNKNOWN_ERROR'
    Common503:
      description: 'Service Unavailable'
      content:
        application/json:
          schema:
            type: 'object'
            properties:
              code:
                type: 'string'
                enum: [SERVICE_DOWNTIME, EXTERNAL_SERVICE_FAILURE]
              message:
                type: 'string'
          examples:
            SERVICE_DOWNTIME:
              $ref: '#/components/examples/SERVICE_DOWNTIME'
            EXTERNAL_SERVICE_FAILURE:
              $ref: '#/components/examples/EXTERNAL_SERVICE_FAILURE'
    400PathPayload:
      description: 'Bad Request'
      content:
        application/json:
          schema:
            type: 'object'
            properties:
              code:
                type: 'string'
                enum: [INVALID_PAYLOAD, INVALID_PATH_PARAMETER]
              message:
                type: 'string'
          examples:
            INVALID_PAYLOAD:
              $ref: '#/components/examples/INVALID_PAYLOAD'
            INVALID_PATH_PARAMETER:
              $ref: '#/components/examples/INVALID_PATH_PARAMETER'

  examples:
    INVALID_PAYLOAD:
      value:
        code: 'APP001'
        message: 'Invalid or malformed request. Details: ${errorDetails}'
    TASK_NOT_FOUND:
      value:
        code: 'APP002'
        message: 'Task not found. TaskID: ${taskId}'
    INVALID_QUERY_PARAMETER:
      value:
        code: 'APP003'
        message: 'Insufficient or invalid query parameter.'
    INVALID_PATH_PARAMETER:
      value:
        code: 'APP004'
        message: 'Invalid or missing parameters. Reference: ${errorDetails}'
    MALFORMED_DATA:
      value:
        code: 'APP101'
        message: 'Failed to process data. Details: ${result.error.message}'
    DATABASE_CONNECTION_ERROR:
      value:
        code: 'SYS001'
        message: 'Database connection error.'
    SERVICE_DOWNTIME:
      value:
        code: 'SYS002'
        message: 'Service is currently unavailable.'
    EXTERNAL_SERVICE_FAILURE:
      value:
        code: 'SYS003'
        message: 'External service error.'
    TIMEOUT:
      value:
        code: 'SYS004'
        message: 'Processing timeout.'
    UNKNOWN_ERROR:
      value:
        code: 'SYS999'
        message: 'Unexpected error.'
